/*
    This SQL script creates a new table named 'don_details' that consolidates donation information 
    from the 'fundraising_v2.donors' table. The new table includes the following columns:

    1. donor_id: The unique identifier for each donor.
    2. donation_id: A unique identifier for each donation, generated by concatenating the donor_id 
		with an underscore '_' and with a row number.
    3. donation_date: The date of the donation, converted from messed up formats (DD.MM.YYYY and 
       YYYY-MM-DD) into a standard DATE type.
    4. donation_amount: The amount of the donation, converted from VARCHAR to an integer type.

    The script performs the following steps:

    - It defines two Common Table Expressions (CTEs):
      - cte1: Extracts donor IDs and donation dates, separating the dates by converting them 
		to JSON arrays so they could be split by commas.
      - cte2: Same as cte1, but with donation amounts.

    - The main query then performs a LEFT JOIN between cte1 and cte2 on the donation_id to combine 
      the information into a single result set.

    - Finally, it creates the 'don_details' table with all selected columns and their respective 
      converted data types.
*/

CREATE TABLE don_details AS
SELECT 
    cte1.donor_id,
    cte1.donation_id,
    cte1.donation_number,
    CASE 
        WHEN cte1.donation_date LIKE '%-%' THEN STR_TO_DATE(cte1.donation_date, '%Y-%m-%d')  -- Convert from YYYY-MM-DD
        WHEN cte1.donation_date LIKE '%.%' THEN STR_TO_DATE(cte1.donation_date, '%d.%m.%Y')  -- Convert from DD.MM.YYYY
        ELSE NULL  -- Handle unexpected formats
    END AS donation_date,
    CAST(cte2.donation_amount AS SIGNED) AS donation_amount
FROM (
    SELECT 
        d.donor_id,
        j.donation_date,
        (ROW_NUMBER() OVER(PARTITION BY d.donor_id ORDER BY d.donor_id)) AS donation_number,
        CONCAT(d.donor_id, '_', ROW_NUMBER() OVER(PARTITION BY d.donor_id ORDER BY d.donor_id)) AS donation_id
    FROM 
        fundraising_v2.donors d
    JOIN 
        json_table(
            REPLACE(json_array(d.donation_date), ',', '","'),
            '$[*]' columns (donation_date VARCHAR(1000) path '$')
        ) j ON d.donor_id = d.donor_id
) cte1
LEFT JOIN (
    SELECT 
        d.donor_id,
        k.donation_amount,
        CONCAT(d.donor_id, '_', ROW_NUMBER() OVER(PARTITION BY d.donor_id ORDER BY d.donor_id)) AS donation_id
    FROM 
        fundraising_v2.donors d
    JOIN 
        json_table(
            REPLACE(json_array(d.donation_amount), ',', '","'),
            '$[*]' columns (donation_amount VARCHAR(67) path '$')
        ) k ON d.donor_id = d.donor_id
) cte2 ON cte1.donation_id = cte2.donation_id;